# Calculate run=/bin/bash pkg(sys-devel/gcc:5.4.0)!= ini(overlay-calculate.revision)<#-cut(0,-,#-cl_pass_file-#)-#

#-ini(overlay-calculate.revision,#-cut(0,-,#-cl_pass_file-#)-#)-#
DBPATH=/var/db/pkg

# получить данные от revdep-rebuild
get_revdep_data() {
	revdep-rebuild --library 'libstdc++.so.6' -p -- --exclude gcc --nodeps | grep -- --nodeps
}

# упростить SLOT, отбросив SUBSLOT
unify_slot() {
	local slot=$1
	if [[ -n $slot ]]
	then
		if [[ $slot =~ ^(.*?)\/.*$ ]]
		then
			echo ${BASH_REMATCH[1]}
		else
			echo $slot
		fi
	fi
}

# получить pkgdir по PN и SLOT
get_package() {
	local pn=$1
	local slot=$2
	for pkgdn in ${DBPATH}/$pn-[0123456789]*
	do
		local pkgslot=$(cat ${pkgdn}/SLOT 2>/dev/null)
		if [[ -z $slot || $(unify_slot $pkgslot) == $slot ]]
		then
			echo $pkgdn
		fi
	done
}

# получить buildtime
get_package_buildtime() {
	[[ -n $1 ]] && cat $1/BUILD_TIME
}

# получить время сборки gcc:5.4.0
get_gcc_buildtime() {
	get_package_buildtime $(get_package sys-devel/gcc 5.4.0)
}

# пометить пакет для пересборки
rebuild_package() {
	local pkgdn=$1
	local pkgnewdn
	if [[ $pkgdn =~ ^(.*?)(-r[0-9]+)$ ]]
	then
		pkgnewdn=${BASH_REMATCH[1]}
	else
		pkgnewdn=$pkgdn
	fi
	if [[ $pkgnewdn =~ _rc73 ]]
	then
		:
	else
		pkgnewdn=${pkgnewdn}_rc73
		mv $pkgdn $pkgnewdn
	fi
}

# искать сломанные пакеты (
search_broken_packages() {
	local gcc_buildtime=$1
	[[ -z $gcc_buildtime ]] && return
	echo "Searching broken packages"
	for pkg in $(get_revdep_data)
	do
		if [[ $pkg =~ \/ ]]
		then
			local data=( ${pkg/:/ } )
			local pn=${data[0]}
			local slot=$(unify_slot ${data[1]})
			local pkgdn=$(get_package $pn $slot)
			local pkg_buildtime=$(get_package_buildtime $pkgdn)
			if [[ -n $pkg_buildtime && $pkg_buildtime -le $gcc_buildtime ]]
			then
				rebuild_package $pkgdn
			fi
		fi
	done
}

search_broken_packages $(get_gcc_buildtime)
true
